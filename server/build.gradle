group 'ratelut'
version '1.10-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'docker'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

// Builds a Docker image based on openjdk. To push it to docker hub:
//   * execute 'docker login'
//   * execute './gradlew buildDocker -Ppush'
task buildDocker(dependsOn: jar, type: Docker) {
    tag "bpavacic/${applicationName}"
    maintainer 'Boris Pavacic "boris.pavacic@gmail.com"'

    baseImage 'openjdk'
    addFile(jar.archivePath, '/tmp/ratelut/app.jar')
    workingDir("/tmp/ratelut/")
    defaultCommand(["java", "-jar", "app.jar"])
    exposePort 8080

    push = project.hasProperty('push')
}

mainClassName = 'com.ratelut.apiserver.app.Main'

jar {
    manifest {
        attributes 'Main-Class': 'com.ratelut.apiserver.app.Main'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.google.guava:guava:19.0'
    compile 'com.google.inject:guice:3.0'
    compile 'com.sun.jersey.contribs:jersey-guice:1.19'
    compile 'com.sun.jersey:jersey-json:1.19'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    // For javax.ws.rs.core.UriBuilder.uri
    // compile 'javax.ws.rs:javax.ws.rs-api:2.0'
    compile 'org.eclipse.jetty:jetty-servlet:9.3.7.v20160115'
    compile 'org.codehaus.jackson:jackson-mapper-lgpl:1.9.13'
    compile 'org.xerial:sqlite-jdbc:3.8.11'

    testCompile 'junit:junit:4.12'
}
